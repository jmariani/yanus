<?php

/**
 * Soap client MySuite
 *
 * Autogenerated with the Yii extension wsdl2php.
 */
//class RequestTransaction {
//
//    public $Requestor; //string;
//    public $Transaction; //string;
//    public $Country; //string;
//    public $Entity; //string;
//    public $User; //string;
//    public $UserName; //string;
//    public $Data1; //string;
//    public $Data2; //string;
//    public $Data3; //string;
//
//}

class RequestTransactionResponse {

    public $RequestTransactionResult; //TransactionTag;

}

class TransactionTag {

    public $Request; //FactRequest;
    public $Response; //FactResponse;
    public $ResponseData; //FactResponseData;

}

class FactRequest {

    public $Requestor; //guid;
    public $RequestorName; //string;
    public $RequestorActive; //boolean;
    public $Transaction; //Transactions;
    public $Country; //string;
    public $Entity; //string;
    public $User; //guid;
    public $UserName; //string;
    public $Id; //guid;
    public $TimeStamp; //dateTime;

}

class FactResponse {

    public $Result; //boolean;
    public $TimeStamp; //dateTime;
    public $LastResult; //string;
    public $Code; //int;
    public $Description; //string;
    public $Hint; //string;
    public $Data; //string;
    public $Processor; //string;
    public $Identifier; //DocID;
    public $BatchIdentifier; //BatchID;

}

class DocID {

    public $Country; //string;
    public $Entity; //string;
    public $FiscalName; //string;
    public $AYear; //string;
    public $ANumber; //string;
    public $Batch; //string;
    public $Serial; //string;
    public $DocumentGUID; //string;
    public $IssuedTimeStamp; //string;
    public $EnrolledTimeStamp; //string;
    public $PaidTimeStamp; //string;
    public $CancelledTimeStamp; //string;
    public $InternalID; //string;
    public $BatchID; //string;
    public $BatchTimeStamp; //string;
    public $BatchRequestorCountry; //string;
    public $BatchRequestorEntity; //string;
    public $BatchPosition; //string;
    public $ReceiverCountry; //string;
    public $ReceiverEntity; //string;
    public $ReceiverTaxID; //string;
    public $ReceiverName; //string;
    public $ClaveAgente; //string;
    public $NumeroDePoliza; //string;
    public $Currency; //string;
    public $TotalAmount; //string;
    public $Type1; //string;
    public $Type2; //string;
    public $SuggestedFileName; //string;
    public $SuggestedFileName2; //string;

}

class BatchID {

    public $BatchId; //string;
    public $BatchTimeStamp; //string;
    public $BatchRequestorCountry; //string;
    public $BatchRequestorEntity; //string;
    public $BatchPosition; //string;

}

class FactResponseData {

    public $ResponseData1; //string;
    public $ResponseData2; //string;
    public $ResponseData3; //string;
    public $ResponseDataSet; //ResponseDataSet;

}

class ResponseDataSet {

    public $schema; //<anyXML>;
    public $any; //<anyXML>;

}

class SSLTransaction {

    public $Entity; //string;
    public $DataExchange; //string;

}

class SSLTransactionResponse {

    public $SSLTransactionResult; //string;

}

class SecureTransaction {

    public $Entity; //string;
    public $DataExchange; //string;

}

class SecureTransactionResponse {

    public $SecureTransactionResult; //string;

}

/**
 * The soap client proxy class
 */
class MySuite {

    public $soapClient;

    private static $classmap = array(
        'RequestTransaction' => 'RequestTransaction',
        'RequestTransactionResponse' => 'RequestTransactionResponse',
        'TransactionTag' => 'TransactionTag',
        'FactRequest' => 'FactRequest',
        'FactResponse' => 'FactResponse',
        'DocID' => 'DocID',
        'BatchID' => 'BatchID',
        'FactResponseData' => 'FactResponseData',
        'ResponseDataSet' => 'ResponseDataSet',
        'SSLTransaction' => 'SSLTransaction',
        'SSLTransactionResponse' => 'SSLTransactionResponse',
        'SecureTransaction' => 'SecureTransaction',
        'SecureTransactionResponse' => 'SecureTransactionResponse',
    );

    function __construct($url = 'https://www.mysuitetest.com/mx.com.fact.wsfront/factwsfront.asmx?wsdl') {
        $this->soapClient = new SoapClient($url, array("classmap" => self::$classmap, "trace" => true, "exceptions" => true));
    }

    function RequestTransaction($RequestTransaction) {
        $RequestTransactionResponse = $this->soapClient->RequestTransaction($RequestTransaction);
        return $RequestTransactionResponse;
    }

    function SSLTransaction($SSLTransaction) {
        $SSLTransactionResponse = $this->soapClient->SSLTransaction($SSLTransaction);
        return $SSLTransactionResponse;
    }

    function SecureTransaction($SecureTransaction) {
        $SecureTransactionResponse = $this->soapClient->SecureTransaction($SecureTransaction);
        return $SecureTransactionResponse;
    }

}

