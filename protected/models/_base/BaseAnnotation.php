<?php

/**
 * This is the model base class for the table "Annotation".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Annotation".
 *
 * Columns in table "Annotation" available as properties of the model,
 * followed by relations of table "Annotation" available as properties of the model.
 *
 * @property integer $id
 * @property string $note
 * @property string $effDt
 * @property string $md5
 *
 * @property Cfd[] $cfds
 */
abstract class BaseAnnotation extends EAVActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Annotation';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Annotation|Annotations', $n);
	}

	public static function representingColumn() {
		return 'note';
	}

	public function relations() {
		$relations = array(
			'cfds' => array(self::MANY_MANY, 'Cfd', 'Cfd_has_Annotation(Annotation_id, Cfd_id)'),
		);
                return array_merge($relations, parent::relations());
	}
	public function rules() {
		return array(
			array('md5', 'length', 'max'=>45),
			array('note, effDt', 'safe'),
			array('note, effDt, md5', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, note, effDt, md5', 'safe', 'on'=>'search'),
		);
	}
	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('note', $this->note, true);
		$criteria->compare('effDt', $this->effDt, true);
		$criteria->compare('md5', $this->md5, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        'pagination' => array('pageSize' => Yii::app()->user->getState('pageSize', Yii::app()->params['defaultPageSize'])),
		));
	}

	public function pivotModels() {
		return array(
			'cfds' => 'CfdHasAnnotation',
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                			'note' => yii::t('app', 'Note'),
                			'effDt' => yii::t('app', 'Eff Dt'),
                			'md5' => yii::t('app', 'Md5'),
                        			                        'cfds' => yii::t('app', 'Cfds'),
		);
	}
}