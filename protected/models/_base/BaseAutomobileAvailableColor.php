<?php

/**
 * This is the model base class for the table "AutomobileAvailableColor".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AutomobileAvailableColor".
 *
 * Columns in table "AutomobileAvailableColor" available as properties of the model,
 * followed by relations of table "AutomobileAvailableColor" available as properties of the model.
 *
 * @property integer $id
 * @property integer $active
 * @property integer $availableForInterior
 * @property integer $availableForExterior
 * @property integer $Color_id
 * @property integer $Automobile_id
 *
 * @property Color $color
 * @property Automobile $automobile
 */
abstract class BaseAutomobileAvailableColor extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'AutomobileAvailableColor';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Automobile Available Color|Automobile Available Colors', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('Color_id, Automobile_id', 'required'),
			array('active, availableForInterior, availableForExterior, Color_id, Automobile_id', 'numerical', 'integerOnly'=>true),
			array('active, availableForInterior, availableForExterior', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, active, availableForInterior, availableForExterior, Color_id, Automobile_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'color' => array(self::BELONGS_TO, 'Color', 'Color_id'),
			'automobile' => array(self::BELONGS_TO, 'Automobile', 'Automobile_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                			'active' => yii::t('app', 'Active'),
                			'availableForInterior' => yii::t('app', 'Available For Interior'),
                			'availableForExterior' => yii::t('app', 'Available For Exterior'),
                        			                        'Color_id' => yii::t('app', 'Color'),
                        			                        'Automobile_id' => yii::t('app', 'Automobile'),
                        			                        'color' => yii::t('app', 'Color'),
                        			                        'automobile' => yii::t('app', 'Automobile'),
		);
	}

    public function defaultScope() {
        return array('order' => $this->getTableAlias(false, false) . '.' . BaseAutomobileAvailableColor::representingColumn() . ' ASC');
    }

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('active', $this->active);
		$criteria->compare('availableForInterior', $this->availableForInterior);
		$criteria->compare('availableForExterior', $this->availableForExterior);
		$criteria->compare('Color_id', $this->Color_id);
		$criteria->compare('Automobile_id', $this->Automobile_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        'pagination' => array('pageSize' => Yii::app()->user->getState('pageSize', Yii::app()->params['defaultPageSize'])),
		));
	}
}