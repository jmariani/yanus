<?php

/**
 * This is the model base class for the table "Cfd".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Cfd".
 *
 * Columns in table "Cfd" available as properties of the model,
 * followed by relations of table "Cfd" available as properties of the model.
 *
 * @property integer $id
 * @property string $invoice
 * @property string $version
 * @property string $serial
 * @property integer $folio
 * @property string $uuid
 * @property string $dttm
 * @property string $seal
 * @property string $paymentType
 * @property string $certNbr
 * @property string $certificate
 * @property string $paymentTerm
 * @property string $subTotal
 * @property string $discount
 * @property string $discountReason
 * @property string $exchangeRate
 * @property string $currency
 * @property string $total
 * @property integer $voucherType
 * @property string $paymentMethod
 * @property string $expeditionPlace
 * @property string $paymentAcctNbr
 * @property integer $sourceFolio
 * @property string $sourceSerial
 * @property string $sourceDttm
 * @property string $sourceAmt
 * @property string $vendorRfc
 * @property string $vendorName
 * @property string $customerRfc
 * @property string $customerName
 * @property string $taxAmt
 * @property string $wthAmt
 * @property string $dtsVersion
 * @property string $dtsDttm
 * @property string $dtsSatCertNbr
 * @property string $dtsSatSeal
 * @property string $dtsOriginalString
 * @property integer $approvalNbr
 * @property integer $approvalYear
 * @property string $md5
 * @property string $creationDt
 * @property string $updateDt
 * @property integer $status
 * @property integer $vendorParty_id
 * @property integer $customerParty_id
 * @property string $originalString
 * @property string $cbb
 *
 * @property Party $vendorParty
 * @property Party $customerParty
 * @property CfdAddress[] $cfdAddresses
 * @property CfdAttribute[] $cfdAttributes
 * @property CfdItem[] $cfdItems
 * @property CfdTax[] $cfdTaxes
 * @property CfdTaxRegime[] $cfdTaxRegimes
 * @property CfdWithholding[] $cfdWithholdings
 * @property CustomsPermit[] $customsPermits
 */
abstract class BaseCfd extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Cfd';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Cfd|Cfds', $n);
	}

	public static function representingColumn() {
		return 'version';
	}

	public function rules() {
		return array(
			array('version, vendorParty_id, customerParty_id', 'required'),
			array('folio, voucherType, sourceFolio, approvalNbr, approvalYear, status, vendorParty_id, customerParty_id', 'numerical', 'integerOnly'=>true),
			array('version, discount, dtsVersion, dtsSatCertNbr', 'length', 'max'=>45),
			array('serial, sourceSerial', 'length', 'max'=>25),
			array('uuid', 'length', 'max'=>36),
			array('certNbr', 'length', 'max'=>20),
			array('subTotal, exchangeRate, total, sourceAmt, taxAmt, wthAmt', 'length', 'max'=>64),
			array('paymentAcctNbr', 'length', 'max'=>4),
			array('vendorRfc, customerRfc', 'length', 'max'=>13),
			array('md5', 'length', 'max'=>32),
			array('invoice, dttm, seal, paymentType, certificate, paymentTerm, discountReason, currency, paymentMethod, expeditionPlace, sourceDttm, vendorName, customerName, dtsDttm, dtsSatSeal, dtsOriginalString, creationDt, updateDt, originalString, cbb', 'safe'),
			array('invoice, serial, folio, uuid, dttm, seal, paymentType, certNbr, certificate, paymentTerm, subTotal, discount, discountReason, exchangeRate, currency, total, voucherType, paymentMethod, expeditionPlace, paymentAcctNbr, sourceFolio, sourceSerial, sourceDttm, sourceAmt, vendorRfc, vendorName, customerRfc, customerName, taxAmt, wthAmt, dtsVersion, dtsDttm, dtsSatCertNbr, dtsSatSeal, dtsOriginalString, approvalNbr, approvalYear, md5, creationDt, updateDt, status, originalString, cbb', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, invoice, version, serial, folio, uuid, dttm, seal, paymentType, certNbr, certificate, paymentTerm, subTotal, discount, discountReason, exchangeRate, currency, total, voucherType, paymentMethod, expeditionPlace, paymentAcctNbr, sourceFolio, sourceSerial, sourceDttm, sourceAmt, vendorRfc, vendorName, customerRfc, customerName, taxAmt, wthAmt, dtsVersion, dtsDttm, dtsSatCertNbr, dtsSatSeal, dtsOriginalString, approvalNbr, approvalYear, md5, creationDt, updateDt, status, vendorParty_id, customerParty_id, originalString, cbb', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'vendorParty' => array(self::BELONGS_TO, 'Party', 'vendorParty_id'),
			'customerParty' => array(self::BELONGS_TO, 'Party', 'customerParty_id'),
			'cfdAddresses' => array(self::HAS_MANY, 'CfdAddress', 'Cfd_id'),
			'cfdAttributes' => array(self::HAS_MANY, 'CfdAttribute', 'Cfd_id'),
			'cfdItems' => array(self::HAS_MANY, 'CfdItem', 'Cfd_id'),
			'cfdTaxes' => array(self::HAS_MANY, 'CfdTax', 'Cfd_id'),
			'cfdTaxRegimes' => array(self::HAS_MANY, 'CfdTaxRegime', 'Cfd_id'),
			'cfdWithholdings' => array(self::HAS_MANY, 'CfdWithholding', 'Cfd_id'),
			'customsPermits' => array(self::MANY_MANY, 'CustomsPermit', 'Cfd_has_CustomsPermit(Cfd_id, CustomsPermit_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'customsPermits' => 'CfdHasCustomsPermit',
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                			'invoice' => yii::t('app', 'Invoice'),
                			'version' => yii::t('app', 'Version'),
                			'serial' => yii::t('app', 'Serial'),
                			'folio' => yii::t('app', 'Folio'),
                			'uuid' => yii::t('app', 'Uuid'),
                			'dttm' => yii::t('app', 'Dttm'),
                			'seal' => yii::t('app', 'Seal'),
                			'paymentType' => yii::t('app', 'Payment Type'),
                			'certNbr' => yii::t('app', 'Cert Nbr'),
                			'certificate' => yii::t('app', 'Certificate'),
                			'paymentTerm' => yii::t('app', 'Payment Term'),
                			'subTotal' => yii::t('app', 'Sub Total'),
                			'discount' => yii::t('app', 'Discount'),
                			'discountReason' => yii::t('app', 'Discount Reason'),
                			'exchangeRate' => yii::t('app', 'Exchange Rate'),
                			'currency' => yii::t('app', 'Currency'),
                			'total' => yii::t('app', 'Total'),
                			'voucherType' => yii::t('app', 'Voucher Type'),
                			'paymentMethod' => yii::t('app', 'Payment Method'),
                			'expeditionPlace' => yii::t('app', 'Expedition Place'),
                			'paymentAcctNbr' => yii::t('app', 'Payment Acct Nbr'),
                			'sourceFolio' => yii::t('app', 'Source Folio'),
                			'sourceSerial' => yii::t('app', 'Source Serial'),
                			'sourceDttm' => yii::t('app', 'Source Dttm'),
                			'sourceAmt' => yii::t('app', 'Source Amt'),
                			'vendorRfc' => yii::t('app', 'Vendor Rfc'),
                			'vendorName' => yii::t('app', 'Vendor Name'),
                			'customerRfc' => yii::t('app', 'Customer Rfc'),
                			'customerName' => yii::t('app', 'Customer Name'),
                			'taxAmt' => yii::t('app', 'Tax Amt'),
                			'wthAmt' => yii::t('app', 'Wth Amt'),
                			'dtsVersion' => yii::t('app', 'Dts Version'),
                			'dtsDttm' => yii::t('app', 'Dts Dttm'),
                			'dtsSatCertNbr' => yii::t('app', 'Dts Sat Cert Nbr'),
                			'dtsSatSeal' => yii::t('app', 'Dts Sat Seal'),
                			'dtsOriginalString' => yii::t('app', 'Dts Original String'),
                			'approvalNbr' => yii::t('app', 'Approval Nbr'),
                			'approvalYear' => yii::t('app', 'Approval Year'),
                			'md5' => yii::t('app', 'Md5'),
                			'creationDt' => yii::t('app', 'Creation Dt'),
                			'updateDt' => yii::t('app', 'Update Dt'),
                			'status' => yii::t('app', 'Status'),
                        			                        'vendorParty_id' => yii::t('app', 'Vendor Party'),
                        			                        'customerParty_id' => yii::t('app', 'Customer Party'),
                			'originalString' => yii::t('app', 'Original String'),
                			'cbb' => yii::t('app', 'Cbb'),
                        			                        'vendorParty' => yii::t('app', 'Vendor Party'),
                        			                        'customerParty' => yii::t('app', 'Customer Party'),
                        			                        'cfdAddresses' => yii::t('app', 'Cfd Addresses'),
                        			                        'cfdAttributes' => yii::t('app', 'Cfd Attributes'),
                        			                        'cfdItems' => yii::t('app', 'Cfd Items'),
                        			                        'cfdTaxes' => yii::t('app', 'Cfd Taxes'),
                        			                        'cfdTaxRegimes' => yii::t('app', 'Cfd Tax Regimes'),
                        			                        'cfdWithholdings' => yii::t('app', 'Cfd Withholdings'),
                        			                        'customsPermits' => yii::t('app', 'Customs Permits'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('invoice', $this->invoice, true);
		$criteria->compare('version', $this->version, true);
		$criteria->compare('serial', $this->serial, true);
		$criteria->compare('folio', $this->folio);
		$criteria->compare('uuid', $this->uuid, true);
		$criteria->compare('dttm', $this->dttm, true);
		$criteria->compare('seal', $this->seal, true);
		$criteria->compare('paymentType', $this->paymentType, true);
		$criteria->compare('certNbr', $this->certNbr, true);
		$criteria->compare('certificate', $this->certificate, true);
		$criteria->compare('paymentTerm', $this->paymentTerm, true);
		$criteria->compare('subTotal', $this->subTotal, true);
		$criteria->compare('discount', $this->discount, true);
		$criteria->compare('discountReason', $this->discountReason, true);
		$criteria->compare('exchangeRate', $this->exchangeRate, true);
		$criteria->compare('currency', $this->currency, true);
		$criteria->compare('total', $this->total, true);
		$criteria->compare('voucherType', $this->voucherType);
		$criteria->compare('paymentMethod', $this->paymentMethod, true);
		$criteria->compare('expeditionPlace', $this->expeditionPlace, true);
		$criteria->compare('paymentAcctNbr', $this->paymentAcctNbr, true);
		$criteria->compare('sourceFolio', $this->sourceFolio);
		$criteria->compare('sourceSerial', $this->sourceSerial, true);
		$criteria->compare('sourceDttm', $this->sourceDttm, true);
		$criteria->compare('sourceAmt', $this->sourceAmt, true);
		$criteria->compare('vendorRfc', $this->vendorRfc, true);
		$criteria->compare('vendorName', $this->vendorName, true);
		$criteria->compare('customerRfc', $this->customerRfc, true);
		$criteria->compare('customerName', $this->customerName, true);
		$criteria->compare('taxAmt', $this->taxAmt, true);
		$criteria->compare('wthAmt', $this->wthAmt, true);
		$criteria->compare('dtsVersion', $this->dtsVersion, true);
		$criteria->compare('dtsDttm', $this->dtsDttm, true);
		$criteria->compare('dtsSatCertNbr', $this->dtsSatCertNbr, true);
		$criteria->compare('dtsSatSeal', $this->dtsSatSeal, true);
		$criteria->compare('dtsOriginalString', $this->dtsOriginalString, true);
		$criteria->compare('approvalNbr', $this->approvalNbr);
		$criteria->compare('approvalYear', $this->approvalYear);
		$criteria->compare('md5', $this->md5, true);
		$criteria->compare('creationDt', $this->creationDt, true);
		$criteria->compare('updateDt', $this->updateDt, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('vendorParty_id', $this->vendorParty_id);
		$criteria->compare('customerParty_id', $this->customerParty_id);
		$criteria->compare('originalString', $this->originalString, true);
		$criteria->compare('cbb', $this->cbb, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}