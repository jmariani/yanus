<?php

/**
 * This is the model base class for the table "CfdAddress".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CfdAddress".
 *
 * Columns in table "CfdAddress" available as properties of the model,
 * followed by relations of table "CfdAddress" available as properties of the model.
 *
 * @property integer $id
 * @property integer $Cfd_id
 * @property integer $Address_id
 * @property string $name
 * @property string $type
 * @property string $reference
 *
 * @property Address $address
 * @property Cfd $cfd
 */
abstract class BaseCfdAddress extends EAVActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'CfdAddress';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Cfd Address|Cfd Addresses', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function relations() {
		$relations = array(
			'address' => array(self::BELONGS_TO, 'Address', 'Address_id'),
			'cfd' => array(self::BELONGS_TO, 'Cfd', 'Cfd_id'),
		);
                return array_merge($relations, parent::relations());
	}
	public function rules() {
		return array(
			array('Cfd_id, Address_id', 'required'),
			array('Cfd_id, Address_id', 'numerical', 'integerOnly'=>true),
			array('type', 'length', 'max'=>45),
			array('name, reference', 'safe'),
			array('name, type, reference', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, Cfd_id, Address_id, name, type, reference', 'safe', 'on'=>'search'),
		);
	}
	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('Cfd_id', $this->Cfd_id);
		$criteria->compare('Address_id', $this->Address_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('reference', $this->reference, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        'pagination' => array('pageSize' => Yii::app()->user->getState('pageSize', Yii::app()->params['defaultPageSize'])),
		));
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                        			                        'Cfd_id' => yii::t('app', 'Cfd'),
                        			                        'Address_id' => yii::t('app', 'Address'),
                			'name' => yii::t('app', 'Name'),
                			'type' => yii::t('app', 'Type'),
                			'reference' => yii::t('app', 'Reference'),
                        			                        'address' => yii::t('app', 'Address'),
                        			                        'cfd' => yii::t('app', 'Cfd'),
		);
	}
}