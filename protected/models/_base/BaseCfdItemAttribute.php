<?php

/**
 * This is the model base class for the table "CfdItemAttribute".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CfdItemAttribute".
 *
 * Columns in table "CfdItemAttribute" available as properties of the model,
 * followed by relations of table "CfdItemAttribute" available as properties of the model.
 *
 * @property integer $id
 * @property integer $CfdItem_id
 * @property string $code
 * @property string $value
 *
 * @property CfdItem $cfdItem
 */
abstract class BaseCfdItemAttribute extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'CfdItemAttribute';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Cfd Item Attribute|Cfd Item Attributes', $n);
	}

	public static function representingColumn() {
		return 'code';
	}

	public function rules() {
		return array(
			array('CfdItem_id, code', 'required'),
			array('CfdItem_id', 'numerical', 'integerOnly'=>true),
			array('code', 'length', 'max'=>45),
			array('value', 'safe'),
			array('value', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, CfdItem_id, code, value', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'cfdItem' => array(self::BELONGS_TO, 'CfdItem', 'CfdItem_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                        			                        'CfdItem_id' => yii::t('app', 'Cfd Item'),
                			'code' => yii::t('app', 'Code'),
                			'value' => yii::t('app', 'Value'),
                        			                        'cfdItem' => yii::t('app', 'Cfd Item'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('CfdItem_id', $this->CfdItem_id);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('value', $this->value, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}