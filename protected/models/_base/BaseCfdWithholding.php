<?php

/**
 * This is the model base class for the table "CfdWithholding".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CfdWithholding".
 *
 * Columns in table "CfdWithholding" available as properties of the model,
 * followed by relations of table "CfdWithholding" available as properties of the model.
 *
 * @property integer $id
 * @property integer $Cfd_id
 * @property string $taxName
 * @property string $amt
 * @property integer $local
 *
 * @property Cfd $cfd
 */
abstract class BaseCfdWithholding extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'CfdWithholding';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Cfd Withholding|Cfd Withholdings', $n);
	}

	public static function representingColumn() {
		return 'taxName';
	}

	public function rules() {
		return array(
			array('Cfd_id', 'required'),
			array('Cfd_id, local', 'numerical', 'integerOnly'=>true),
			array('amt', 'length', 'max'=>64),
			array('taxName', 'safe'),
			array('taxName, amt, local', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, Cfd_id, taxName, amt, local', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'cfd' => array(self::BELONGS_TO, 'Cfd', 'Cfd_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                        			                        'Cfd_id' => yii::t('app', 'Cfd'),
                			'taxName' => yii::t('app', 'Tax Name'),
                			'amt' => yii::t('app', 'Amt'),
                			'local' => yii::t('app', 'Local'),
                        			                        'cfd' => yii::t('app', 'Cfd'),
		);
	}

    public function defaultScope() {
        return array('order' => $this->getTableAlias(false, false) . '.' . BaseCfdWithholding::representingColumn() . ' ASC');
    }

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('Cfd_id', $this->Cfd_id);
		$criteria->compare('taxName', $this->taxName, true);
		$criteria->compare('amt', $this->amt, true);
		$criteria->compare('local', $this->local);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        'pagination' => array('pageSize' => Yii::app()->user->getState('pageSize', Yii::app()->params['defaultPageSize'])),
		));
	}
}