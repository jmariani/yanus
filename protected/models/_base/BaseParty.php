<?php

/**
 * This is the model base class for the table "Party".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Party".
 *
 * Columns in table "Party" available as properties of the model,
 * followed by relations of table "Party" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $type
 *
 * @property Cfd[] $cfds
 * @property Cfd[] $cfds1
 * @property PartyAddress[] $partyAddresses
 * @property PartyAttribute[] $partyAttributes
 * @property PartyName[] $partyNames
 */
abstract class BaseParty extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Party';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Party|Parties', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, type', 'required'),
			array('type', 'numerical', 'integerOnly'=>true),
			array('id, name, type', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'cfds' => array(self::HAS_MANY, 'Cfd', 'vendorParty_id'),
			'cfds1' => array(self::HAS_MANY, 'Cfd', 'customerParty_id'),
			'partyAddresses' => array(self::HAS_MANY, 'PartyAddress', 'Party_id'),
			'partyAttributes' => array(self::HAS_MANY, 'PartyAttribute', 'Party_id'),
			'partyNames' => array(self::HAS_MANY, 'PartyName', 'Party_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                			'name' => yii::t('app', 'Name'),
                			'type' => yii::t('app', 'Type'),
                        			                        'cfds' => yii::t('app', 'Cfds'),
                        			                        'cfds1' => yii::t('app', 'Cfds1'),
                        			                        'partyAddresses' => yii::t('app', 'Party Addresses'),
                        			                        'partyAttributes' => yii::t('app', 'Party Attributes'),
                        			                        'partyNames' => yii::t('app', 'Party Names'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('type', $this->type);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}