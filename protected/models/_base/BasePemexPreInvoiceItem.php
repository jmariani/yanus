<?php

/**
 * This is the model base class for the table "PemexPreInvoiceItem".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PemexPreInvoiceItem".
 *
 * Columns in table "PemexPreInvoiceItem" available as properties of the model,
 * followed by relations of table "PemexPreInvoiceItem" available as properties of the model.
 *
 * @property integer $id
 * @property integer $PemexPreInvoice_id
 * @property string $qty
 * @property string $description
 * @property string $amount
 * @property string $uom
 * @property string $unitPrice
 *
 * @property PemexPreInvoice $pemexPreInvoice
 */
abstract class BasePemexPreInvoiceItem extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'PemexPreInvoiceItem';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Pemex Pre Invoice Item|Pemex Pre Invoice Items', $n);
	}

	public static function representingColumn() {
		return 'qty';
	}

	public function rules() {
		return array(
			array('PemexPreInvoice_id', 'required'),
			array('PemexPreInvoice_id', 'numerical', 'integerOnly'=>true),
			array('qty, amount, unitPrice', 'length', 'max'=>64),
			array('uom', 'length', 'max'=>45),
			array('description', 'safe'),
			array('qty, description, amount, uom, unitPrice', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, PemexPreInvoice_id, qty, description, amount, uom, unitPrice', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'pemexPreInvoice' => array(self::BELONGS_TO, 'PemexPreInvoice', 'PemexPreInvoice_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                        			                        'PemexPreInvoice_id' => yii::t('app', 'Pemex Pre Invoice'),
                			'qty' => yii::t('app', 'Qty'),
                			'description' => yii::t('app', 'Description'),
                			'amount' => yii::t('app', 'Amount'),
                			'uom' => yii::t('app', 'Uom'),
                			'unitPrice' => yii::t('app', 'Unit Price'),
                        			                        'pemexPreInvoice' => yii::t('app', 'Pemex Pre Invoice'),
		);
	}

    public function defaultScope() {
        return array('order' => $this->getTableAlias(false, false) . '.' . BasePemexPreInvoiceItem::representingColumn() . ' ASC');
    }

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('PemexPreInvoice_id', $this->PemexPreInvoice_id);
		$criteria->compare('qty', $this->qty, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('amount', $this->amount, true);
		$criteria->compare('uom', $this->uom, true);
		$criteria->compare('unitPrice', $this->unitPrice, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        'pagination' => array('pageSize' => Yii::app()->user->getState('pageSize', Yii::app()->params['defaultPageSize'])),
		));
	}
}