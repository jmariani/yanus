<?php

/**
 * This is the model base class for the table "RegisterForm".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RegisterForm".
 *
 * Columns in table "RegisterForm" available as properties of the model,
 * followed by relations of table "RegisterForm" available as properties of the model.
 *
 * @property integer $id
 * @property string $businessName
 * @property string $rfc
 * @property string $userName
 * @property string $password
 * @property string $street
 * @property string $extNbr
 * @property string $intNbr
 * @property string $colony
 * @property string $city
 * @property string $municipality
 * @property string $zipCode
 * @property string $reference
 * @property integer $State_id
 * @property string $contactPhone
 * @property string $contactEmail
 * @property string $activationKey
 * @property string $activationUrl
 * @property string $lastName
 * @property string $motherName
 * @property string $firstName
 * @property string $secondName
 * @property string $fiscalRegime
 *
 * @property State $state
 */
abstract class BaseRegisterForm extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'RegisterForm';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Register Form|Register Forms', $n);
	}

	public static function representingColumn() {
		return 'businessName';
	}

	public function rules() {
		return array(
			array('businessName, rfc, userName, password, contactPhone, contactEmail, lastName, firstName', 'required'),
			array('State_id', 'numerical', 'integerOnly'=>true),
			array('rfc', 'length', 'max'=>13),
			array('userName', 'length', 'max'=>20),
			array('password, activationKey, lastName, motherName, firstName, secondName', 'length', 'max'=>128),
			array('zipCode', 'length', 'max'=>5),
			array('street, extNbr, intNbr, colony, city, municipality, reference, activationUrl, fiscalRegime', 'safe'),
			array('street, extNbr, intNbr, colony, city, municipality, zipCode, reference, State_id, activationKey, activationUrl, motherName, secondName, fiscalRegime', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, businessName, rfc, userName, password, street, extNbr, intNbr, colony, city, municipality, zipCode, reference, State_id, contactPhone, contactEmail, activationKey, activationUrl, lastName, motherName, firstName, secondName, fiscalRegime', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'state' => array(self::BELONGS_TO, 'State', 'State_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                			'businessName' => yii::t('app', 'Business Name'),
                			'rfc' => yii::t('app', 'Rfc'),
                			'userName' => yii::t('app', 'User Name'),
                			'password' => yii::t('app', 'Password'),
                			'street' => yii::t('app', 'Street'),
                			'extNbr' => yii::t('app', 'Ext Nbr'),
                			'intNbr' => yii::t('app', 'Int Nbr'),
                			'colony' => yii::t('app', 'Colony'),
                			'city' => yii::t('app', 'City'),
                			'municipality' => yii::t('app', 'Municipality'),
                			'zipCode' => yii::t('app', 'Zip Code'),
                			'reference' => yii::t('app', 'Reference'),
                        			                        'State_id' => yii::t('app', 'State'),
                			'contactPhone' => yii::t('app', 'Contact Phone'),
                			'contactEmail' => yii::t('app', 'Contact Email'),
                			'activationKey' => yii::t('app', 'Activation Key'),
                			'activationUrl' => yii::t('app', 'Activation Url'),
                			'lastName' => yii::t('app', 'Last Name'),
                			'motherName' => yii::t('app', 'Mother Name'),
                			'firstName' => yii::t('app', 'First Name'),
                			'secondName' => yii::t('app', 'Second Name'),
                			'fiscalRegime' => yii::t('app', 'Fiscal Regime'),
                        			                        'state' => yii::t('app', 'State'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('businessName', $this->businessName, true);
		$criteria->compare('rfc', $this->rfc, true);
		$criteria->compare('userName', $this->userName, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('street', $this->street, true);
		$criteria->compare('extNbr', $this->extNbr, true);
		$criteria->compare('intNbr', $this->intNbr, true);
		$criteria->compare('colony', $this->colony, true);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('municipality', $this->municipality, true);
		$criteria->compare('zipCode', $this->zipCode, true);
		$criteria->compare('reference', $this->reference, true);
		$criteria->compare('State_id', $this->State_id);
		$criteria->compare('contactPhone', $this->contactPhone, true);
		$criteria->compare('contactEmail', $this->contactEmail, true);
		$criteria->compare('activationKey', $this->activationKey, true);
		$criteria->compare('activationUrl', $this->activationUrl, true);
		$criteria->compare('lastName', $this->lastName, true);
		$criteria->compare('motherName', $this->motherName, true);
		$criteria->compare('firstName', $this->firstName, true);
		$criteria->compare('secondName', $this->secondName, true);
		$criteria->compare('fiscalRegime', $this->fiscalRegime, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}