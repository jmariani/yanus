<?php

/**
 * This is the model base class for the table "RelatedModel".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RelatedModel".
 *
 * Columns in table "RelatedModel" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $parentModel
 * @property integer $parentId
 * @property string $childModel
 * @property integer $childId
 * @property string $cDttm
 *
 */
abstract class BaseRelatedModel extends EAVActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'RelatedModel';
	}

	public static function label($n = 1) {
        return Yii::t('app', 'Related Model|Related Models', $n);
	}

	public static function representingColumn() {
		return 'parentModel';
	}

	public function rules() {
		return array(
			array('parentId, childId', 'numerical', 'integerOnly'=>true),
			array('parentModel, childModel', 'length', 'max'=>255),
			array('cDttm', 'safe'),
			array('parentModel, parentId, childModel, childId, cDttm', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, parentModel, parentId, childModel, childId, cDttm', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		$relations = array(
		);
                return array_merge($relations, parent::relations());
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
                			'id' => yii::t('app', 'Id'),
                			'parentModel' => yii::t('app', 'Parent Model'),
                			'parentId' => yii::t('app', 'Parent Id'),
                			'childModel' => yii::t('app', 'Child Model'),
                			'childId' => yii::t('app', 'Child Id'),
                			'cDttm' => yii::t('app', 'C Dttm'),
		);
	}


	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('parentModel', $this->parentModel, true);
		$criteria->compare('parentId', $this->parentId);
		$criteria->compare('childModel', $this->childModel, true);
		$criteria->compare('childId', $this->childId);
		$criteria->compare('cDttm', $this->cDttm, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        'pagination' => array('pageSize' => Yii::app()->user->getState('pageSize', Yii::app()->params['defaultPageSize'])),
		));
	}
}